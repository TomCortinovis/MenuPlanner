<UserControl x:Class="MenuPlanner.UI.Views.PlanningView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MenuPlanner.UI.Views"
             xmlns:models="clr-namespace:MenuPlanner.UI.Models"
             mc:Ignorable="d" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
             xmlns:converters="clr-namespace:MenuPlanner.Common.Converters;assembly=MenuPlanner.Common"
             xmlns:transverse="clr-namespace:MenuPlanner.Utils.Transverse;assembly=MenuPlanner.Utils"
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="1" Text="{Binding CurrentProfile.Name, StringFormat={}Planning de {0}}" Style="{StaticResource BigTitle}" />
                <Rectangle Grid.Column="0" VerticalAlignment="Center" Height="2" Margin="10,0" Fill="{StaticResource AccentColor}" />
                <Rectangle Grid.Column="2" VerticalAlignment="Center" Height="2" Margin="10,0" Fill="{StaticResource AccentColor}" />
            </Grid>
            <TextBlock Text="Vue par :" Style="{StaticResource Subtitle}" Margin="0,0,0,5" />
            <StackPanel Orientation="Horizontal">
                <RadioButton GroupName="View" Content="Mois" Margin="0,0,10,0" IsChecked="{Binding Mode, Converter={x:Static converters:Converters.IsPlanningModeSelected}, ConverterParameter={x:Static transverse:PlanningMode.Monthly}}" Command="{Binding ChangePlanningModeCommand}" CommandParameter="{x:Static transverse:PlanningMode.Monthly}"  />
                <RadioButton GroupName="View" Content="Semaine" IsChecked="{Binding Mode, Converter={x:Static converters:Converters.IsPlanningModeSelected}, ConverterParameter={x:Static transverse:PlanningMode.Weekly}}" Command="{Binding ChangePlanningModeCommand}" CommandParameter="{x:Static transverse:PlanningMode.Weekly}"  />
            </StackPanel>
        </StackPanel>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Button Content="&lt;" Grid.Column="0" Padding="5,0" Visibility="{Binding Paginator.HasPreviousData, Converter={x:Static converters:Converters.BoolToVisibility}}" Command="{Binding PreviousPageCommand}" />
            <Button Content="&gt;" Grid.Column="2" Padding="5,0" Visibility="{Binding Paginator.HasNextData, Converter={x:Static converters:Converters.BoolToVisibility}}" Command="{Binding NextPageCommand}" />
            <ItemsControl ItemsSource="{Binding Schedule}" Grid.Column="1" x:Name="Schedule">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border BorderThickness="1" BorderBrush="{StaticResource AccentColor}" CornerRadius="5" Margin="5">
                            <Grid>
                                <Grid.OpacityMask>
                                    <VisualBrush Visual="{Binding ElementName=clipMask}" Stretch="None" />
                                </Grid.OpacityMask>
                                <Border x:Name="clipMask" CornerRadius="5" Background="White" />
                                <StackPanel Orientation="Vertical">
                                    <TextBlock Text="{Binding Day, StringFormat=D}" TextAlignment="Center" Background="{StaticResource AccentColor}" Padding="0,5" Foreground="White" />
                                    <ItemsControl ItemsSource="{Binding Meals}" Margin="5">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <WrapPanel Margin="0,5">
                                                    <TextBlock TextWrapping="Wrap" Foreground="{StaticResource ContrastColor}">
                                                        <TextBlock.Text>
                                                            <MultiBinding StringFormat="{}{0} : {1}">
                                                                <Binding Path="Time" Converter="{x:Static converters:Converters.ToTimeString}" />
                                                                <Binding Path="Title" />
                                                            </MultiBinding>
                                                        </TextBlock.Text>
                                                    </TextBlock>
                                                </WrapPanel>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </StackPanel>
                            </Grid>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                    <cmd:EventToCommand Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}, Path=DataContext.PlanningSelectCommand}" CommandParameter="{Binding .}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid IsItemsHost="True"
                                 Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollContentPresenter}}, Path=ActualWidth}"
                                 Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollContentPresenter}}, Path=ActualHeight}">
                            <UniformGrid.Style>
                                <Style TargetType="{x:Type UniformGrid}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Mode, Converter={x:Static converters:Converters.IsPlanningModeSelected}, ConverterParameter={x:Static transverse:PlanningMode.Monthly}}" Value="True">
                                            <Setter Property="Rows" Value="4" />
                                            <Setter Property="Columns" Value="7" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Mode, Converter={x:Static converters:Converters.IsPlanningModeSelected}, ConverterParameter={x:Static transverse:PlanningMode.Weekly}}" Value="True">
                                            <Setter Property="Rows" Value="2" />
                                            <Setter Property="Columns" Value="4" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </UniformGrid.Style>
                        </UniformGrid>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </Grid>
        <Button Grid.Row="2" Content="Imprimer" HorizontalAlignment="Center" Padding="10,5" Command="{Binding PrintCommand}" />
    </Grid>
</UserControl>
